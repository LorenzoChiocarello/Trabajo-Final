
package Vista;

import Gestor.Conexion;
import Modelo.Cliente;
import Modelo.Proveedor;
import Modelo.ProveedorDAO;
import Modelo.SaldoProveedorDAO;
import Modelo.SaldoProveedores;
import static Vista.Principal.VentanaPrincipal;
import static Vista.SaldoCliente.validarNumeros;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.HashSet;
import java.util.Set;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.showConfirmDialog;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;


public class SaldoProveedor extends javax.swing.JInternalFrame {

    Conexion enlace = new Conexion();
    Connection conect = enlace.conectar();
    
    SaldoProveedorDAO spdao= new SaldoProveedorDAO();
    ProveedorDAO pdao = new ProveedorDAO();
    Proveedor p = new Proveedor();
    SaldoProveedores sp = new SaldoProveedores();
    
    DefaultTableModel modelo = new DefaultTableModel();
    
    Calendar fecha_actual= new GregorianCalendar();
    
    
    public SaldoProveedor() {
        initComponents();
        
        jdcFecha.setCalendar(fecha_actual);
        
        txtCodProveedor.requestFocus();
        txtCodProveedor.setBackground(Color.yellow);
        
        txtImporte.setEnabled(false);
        
        btnMostrarSaldo.setEnabled(false);
        btnAceptar.setEnabled(false);
        txtDescripcion.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cboTipo = new javax.swing.JComboBox();
        jdcFecha = new com.toedter.calendar.JDateChooser();
        jLabel13 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtCodProveedor = new javax.swing.JTextField();
        txtProveedor = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();
        btnMostrarSaldo = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtImporte = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtDescripcion = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        cboFormaPago = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        lstSaldoProveedor = new javax.swing.JTable();
        btnAceptar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Saldos Proveedores");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("TIPO");

        cboTipo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cboTipo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ANTICIPO", "DEBITO", "CREDITO" }));

        jdcFecha.setEnabled(false);
        jdcFecha.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel13.setText("FECHA:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(cboTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel13)
                .addGap(18, 18, 18)
                .addComponent(jdcFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(cboTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel13))
                    .addComponent(jdcFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel2.setText("PROVEEDOR");

        txtCodProveedor.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtCodProveedor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCodProveedorKeyPressed(evt);
            }
        });

        txtProveedor.setEditable(false);
        txtProveedor.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        btnBuscar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnBuscar.setText("BUSCAR");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        btnMostrarSaldo.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnMostrarSaldo.setText("MOSTRAR SALDO");
        btnMostrarSaldo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarSaldoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtCodProveedor)
                            .addComponent(btnBuscar, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 940, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(412, 412, 412)
                                .addComponent(btnMostrarSaldo)
                                .addGap(0, 0, Short.MAX_VALUE))))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCodProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBuscar)
                    .addComponent(btnMostrarSaldo))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel3.setText("IMPORTE");

        txtImporte.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtImporte.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtImporteKeyPressed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("$");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel5.setText("DESCRIPCION");

        txtDescripcion.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtDescripcion.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtDescripcionKeyPressed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel6.setText("FORMA DE PAGO");

        cboFormaPago.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        cboFormaPago.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Efectivo", "Debito", "Credito", "Cheque" }));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(cboFormaPago, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel6)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 12, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtImporte, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(246, 246, 246)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(txtDescripcion))
                        .addContainerGap())))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtImporte, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addComponent(cboFormaPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(46, Short.MAX_VALUE))
        );

        lstSaldoProveedor.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        lstSaldoProveedor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "IDENTIFICACION", "NOMBRE", "SALDO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(lstSaldoProveedor);
        if (lstSaldoProveedor.getColumnModel().getColumnCount() > 0) {
            lstSaldoProveedor.getColumnModel().getColumn(0).setResizable(false);
        }

        btnAceptar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnAceptar.setText("ACEPTAR");
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });

        btnCancelar.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnCancelar.setText("CANCELAR");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1192, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(436, 436, 436)
                .addComponent(btnAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(94, 94, 94)
                .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAceptar, javax.swing.GroupLayout.DEFAULT_SIZE, 53, Short.MAX_VALUE)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
//        if(txtCodProveedor.getText().equals(""))
//        {
//            txtCodProveedor.requestFocus();
//            txtCodProveedor.setBackground(Color.yellow);
//            
//            JOptionPane.showMessageDialog(this, "Debe ingresar CODIGO DEL PROVEEDOR");
//        }
//        else
//        {
//            buscarProveedor();
//        
//            mostrarDatosProveedor(0, null);
//
//            //txtImporte.requestFocus();
//            //txtImporte.setBackground(Color.YELLOW);
//            //txtCodCliente.setBackground(Color.WHITE);
//            
//            DefaultTableCellRenderer tcr = new DefaultTableCellRenderer();
//            tcr.setHorizontalAlignment(SwingConstants.RIGHT);
//            lstProveedor.getColumnModel().getColumn(2).setCellRenderer(tcr);
//        }
        ListadoProveedorCopia lp = new ListadoProveedorCopia();
        Principal.VentanaPrincipal.add(lp);
        lp.toFront();
        lp.setVisible(true);
        
        Dimension desktopSize = VentanaPrincipal.getSize();
        Dimension FrameSize = lp.getSize();
        lp.setLocation((desktopSize.width - FrameSize.width)/3, (desktopSize.height- FrameSize.height)/3);
        lp.show();
        //buscarProveedor();
        
        btnMostrarSaldo.setEnabled(true);
        
        
        
        
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
//        if(txtCodProveedor.getText().equals("") )
//        {
//            txtCodProveedor.requestFocus();
//            txtCodProveedor.setBackground(Color.yellow);
//            
//            JOptionPane.showMessageDialog(this, "Debe ingresar CODIGO DE PROVEEDOR");
//        }
//        else
//        {
//            if((txtImporte.getText().equals("")))
//            {
//                JOptionPane.showMessageDialog(this, "Debe ingresar IMPORTE");
//                
//                txtImporte.requestFocus();
//                txtImporte.setBackground(Color.yellow);
//            }
//            else
//            {
//                if(txtDescripcion.getText().equals(""))
//                {
//                    JOptionPane.showMessageDialog(this, "Debe ingresar DESCRIPCION");
//                    
//                    txtDescripcion.requestFocus();
//                    txtDescripcion.setBackground(Color.yellow);
//                }
//                else
//                {
//                    if(!validarNumeros(txtImporte.getText().trim()))
//                    {
//                        txtImporte.requestFocus();
//                        txtImporte.setBackground(Color.yellow);
//                        
//                        JOptionPane.showMessageDialog(this, "Debe ingresar un IMPORTE VALIDO");
//                    }
//                    else
//                    {
//                        agregarSaldo();
//        
//                        limpiarCampos();
//                        limpiarTabla();
//                        
//                        
//
//                        txtCodProveedor.requestFocus();
//                        txtCodProveedor.setBackground(Color.yellow);
//                        txtImporte.setBackground(Color.white);
//                        txtDescripcion.setBackground(Color.white);
//                        
//                        
//                    }
//                }
//                
//            }
//        }
        if(txtProveedor.getText().equals(""))
        {
            txtProveedor.requestFocus();
            txtProveedor.setBackground(Color.yellow);
            
            JOptionPane.showMessageDialog(this, "Debe ingresar un PROVEEDOR VALIDO");
        }
        else
        {
            if(txtImporte.getText().equals(""))
            {
                txtImporte.requestFocus();
                txtImporte.setBackground(Color.yellow);
            
                JOptionPane.showMessageDialog(this, "Debe ingresar un IMPORTE");
            }
            else
            {
                if(!validarNumeros(txtImporte.getText().trim()))
                {
                    txtImporte.requestFocus();
                    txtImporte.setBackground(Color.yellow);
                        
                    JOptionPane.showMessageDialog(this, "Debe ingresar un IMPORTE VALIDO");
                }
                else
                {
                    
                    int r = showConfirmDialog(null, "ESTA SEGURO QUE DESEA CARGAR EL SALDO?");
                    if(r==0)
                    {
                    agregarSaldo();
        
                    limpiarCampos();
                    limpiarTabla();
                        
                    JOptionPane.showMessageDialog(this, "EL SALDO SE REALIZO CON EXITO");    

                    txtCodProveedor.requestFocus();
                    txtCodProveedor.setBackground(Color.yellow);
                    txtImporte.setBackground(Color.white);
                    txtDescripcion.setBackground(Color.white);
                    cboFormaPago.setBackground(Color.white);
                    txtProveedor.setBackground(Color.white);
                    
                    txtImporte.setEnabled(false);
        
                    btnMostrarSaldo.setEnabled(false);
                    btnAceptar.setEnabled(false);
                    txtDescripcion.setEnabled(false);
                    }
                    else{}
                    
                }
            }
        }
        
        
    }//GEN-LAST:event_btnAceptarActionPerformed

    void limpiarTabla()
    {
        DefaultTableModel tb = (DefaultTableModel) lstSaldoProveedor.getModel();
        int a = lstSaldoProveedor.getRowCount()-1;
        for (int i = a; i >= 0; i--) {
            tb.removeRow(tb.getRowCount()-1);
            i=i-1;
        }
    }
    
    
    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnMostrarSaldoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarSaldoActionPerformed
        if(txtProveedor.getText().equals(""))
        {
            txtCodProveedor.requestFocus();
            txtCodProveedor.setBackground(Color.yellow);
            
            JOptionPane.showMessageDialog(this, "Debe ingresar un CLIENTE VALIDO");
        }
        else
        {
            mostrarDatosProveedor(0, null);
        
            DefaultTableCellRenderer tcr = new DefaultTableCellRenderer();
            tcr.setHorizontalAlignment(SwingConstants.RIGHT);
            lstSaldoProveedor.getColumnModel().getColumn(2).setCellRenderer(tcr);

            txtImporte.setEnabled(true);
            btnAceptar.setEnabled(true);
            txtImporte.requestFocus();
            txtImporte.setBackground(Color.yellow);
            txtCodProveedor.setBackground(Color.white);
            txtDescripcion.setEnabled(true);
        }
        
    }//GEN-LAST:event_btnMostrarSaldoActionPerformed

    private void txtImporteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtImporteKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {
            txtDescripcion.requestFocus();
            txtDescripcion.setBackground(Color.YELLOW);
            txtImporte.setBackground(Color.WHITE);
        }
    }//GEN-LAST:event_txtImporteKeyPressed

    private void txtCodProveedorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodProveedorKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {
            if(txtCodProveedor.getText().equals(""))
            {
                txtCodProveedor.requestFocus();
                txtCodProveedor.setBackground(Color.yellow);
                
                JOptionPane.showMessageDialog(this, "PROVEEDOR NO REGISTRADO");
            }
            else
            {
                buscarProveedor();
                btnMostrarSaldo.setEnabled(true);
            }
        }
    }//GEN-LAST:event_txtCodProveedorKeyPressed

    private void txtDescripcionKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDescripcionKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {
            cboFormaPago.requestFocus();
            cboFormaPago.setBackground(Color.YELLOW);
            txtDescripcion.setBackground(Color.WHITE);
        }
    }//GEN-LAST:event_txtDescripcionKeyPressed

    void buscarProveedor()
    {
        int id= Integer.parseInt(txtCodProveedor.getText());
        Proveedor p = pdao.listarID(id);
        txtProveedor.setText(p.getNombre());
    }
    
    void agregarSaldo()
    {
        
        int opcion = cboTipo.getSelectedIndex();
        
        
            if(opcion == 0)
            {
                int idp= Integer.parseInt(txtCodProveedor.getText());
                double monto = Double.parseDouble(txtImporte.getText());
                String descripcion = txtDescripcion.getText();
                String forma_pago = cboFormaPago.getSelectedItem().toString();
                Date date = jdcFecha.getDate();
                
                long d = date.getTime();
                java.sql.Date fecha = new java.sql.Date(d);
            
                sp.setIdProveedor(idp);
                sp.setMonto(monto);
                sp.setDescripcion(descripcion);
                sp.setForma_pago(forma_pago);
                sp.setFecha(fecha);
            
                spdao.GuardarSaldoAnticipo(sp);
            }
            else
            {
                if(opcion == 1)
                {
                    int idp= Integer.parseInt(txtCodProveedor.getText());
                    double resto = Double.parseDouble(txtImporte.getText());
                    String descripcion = txtDescripcion.getText();
                    String forma_pago = cboFormaPago.getSelectedItem().toString();
                    Date date = jdcFecha.getDate();
                    
                    long d = date.getTime();
                    java.sql.Date fecha = new java.sql.Date(d);
            
                    sp.setIdProveedor(idp);
                    sp.setResto(resto);
                    sp.setDescripcion(descripcion);
                    sp.setForma_pago(forma_pago);
                    sp.setFecha(fecha);
            
                    spdao.GuardarSaldoDeuda(sp);
                }
            else
            {
                int idp= Integer.parseInt(txtCodProveedor.getText());
                double monto = Double.parseDouble(txtImporte.getText());
                String descripcion = txtDescripcion.getText();
                String forma_pago = cboFormaPago.getSelectedItem().toString();
                Date date = jdcFecha.getDate();
                
                long d = date.getTime();
                java.sql.Date fecha = new java.sql.Date(d);
            
                sp.setIdProveedor(idp);
                sp.setMonto(monto);
                sp.setDescripcion(descripcion);
                sp.setForma_pago(forma_pago);
                sp.setFecha(fecha);
            
                spdao.GuardarSaldoAnticipo(sp);
            }
        }
            
        
        
            
            
            
        
    }
    
    void buscarProveedor1()
    {
//        int r=0;
//        
//        if(txtCodProveedor.getText().isEmpty())
//        {
//            
//            JOptionPane.showMessageDialog(this, "Debe ingresar CODIGO DE PROVEEDOR");
//        }
//        else
//        {
//            int id=Integer.parseInt(txtCodProveedor.getText());
//            Proveedor p = pdao.listarID(id);
//            if(p.getIdProveedor()!= 0)
//            {
//                txtProveedor.setText(p.getNombre());
//                mostrarDatosProveedor(0, null);
//
//            }
//            else
//            {
//                r=JOptionPane.showConfirmDialog(this, "Proveedor no registrado, Desea registrarlo?", "OK_CANCEL_OPTION", JOptionPane.OK_CANCEL_OPTION,
//                JOptionPane.INFORMATION_MESSAGE);
//                if(r==0)
//                {
//                    txtProveedor.setText("");
//                    RegistrarProveedor rp= new RegistrarProveedor();
//                    VentanaPrincipal.add(rp);
//                    rp.setVisible(true);
//                    
//                    txtCodProveedor.requestFocus();
//                    txtCodProveedor.setBackground(Color.yellow);
//                    
//                    txtImporte.setEnabled(true);
//                    
//                    
//                }
//            }
//        }
    }
    
    public void mostrarDatosProveedor(int opbuscar, String valor)
    {
        DefaultTableModel tProveedor = new DefaultTableModel();
        
        tProveedor.addColumn("IDENTIFICACION");
        tProveedor.addColumn("NOMBRE");
        tProveedor.addColumn("SALDO");
        
        lstSaldoProveedor.setModel(tProveedor);
        
        String codsql = null;
        
        int id = Integer.parseInt(txtCodProveedor.getText());
        if(txtCodProveedor.getText() != null)
        {
            codsql = "select p.id, nombre, sum(monto)-sum(resto) as saldo from proveedores p, saldos_proveedor s where p.id=s.id_proveedor  and p.id = '" + id +"' group by p.id, nombre";
        }
        
        
        String []datos = new String[10];
        
        try
        {
            Statement leer = conect.createStatement();
            ResultSet resultado = leer.executeQuery(codsql);
                
            while(resultado.next())
            {
                datos[0] = resultado.getString(1);
                datos[1] = resultado.getString(2);
                datos[2] = resultado.getString(3);

                    
                tProveedor.addRow(datos);
            }
            
            lstSaldoProveedor.setModel(tProveedor);
            
            
            
        }
        catch (SQLException e) 
        {
            JOptionPane.showMessageDialog(null, e +  "Error en la consulta");
        }
    }
    
    void limpiarCampos()
    {
        txtCodProveedor.setText("");
        txtProveedor.setText("");
        txtImporte.setText("");
        txtDescripcion.setText("");
        
        
    }
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnMostrarSaldo;
    private javax.swing.JComboBox<String> cboFormaPago;
    private javax.swing.JComboBox cboTipo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private com.toedter.calendar.JDateChooser jdcFecha;
    public static javax.swing.JTable lstSaldoProveedor;
    public static javax.swing.JTextField txtCodProveedor;
    private javax.swing.JTextField txtDescripcion;
    private javax.swing.JTextField txtImporte;
    public static javax.swing.JTextField txtProveedor;
    // End of variables declaration//GEN-END:variables
}
